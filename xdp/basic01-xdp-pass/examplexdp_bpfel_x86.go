// Code generated by bpf2go; DO NOT EDIT.
//go:build 386 || amd64
// +build 386 amd64

package main

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// loadExampleXdp returns the embedded CollectionSpec for exampleXdp.
func loadExampleXdp() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_ExampleXdpBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load exampleXdp: %w", err)
	}

	return spec, err
}

// loadExampleXdpObjects loads exampleXdp and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//     *exampleXdpObjects
//     *exampleXdpPrograms
//     *exampleXdpMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func loadExampleXdpObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := loadExampleXdp()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// exampleXdpSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type exampleXdpSpecs struct {
	exampleXdpProgramSpecs
	exampleXdpMapSpecs
}

// exampleXdpSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type exampleXdpProgramSpecs struct {
	XdpPass *ebpf.ProgramSpec `ebpf:"xdp_pass"`
}

// exampleXdpMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type exampleXdpMapSpecs struct {
}

// exampleXdpObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to loadExampleXdpObjects or ebpf.CollectionSpec.LoadAndAssign.
type exampleXdpObjects struct {
	exampleXdpPrograms
	exampleXdpMaps
}

func (o *exampleXdpObjects) Close() error {
	return _ExampleXdpClose(
		&o.exampleXdpPrograms,
		&o.exampleXdpMaps,
	)
}

// exampleXdpMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to loadExampleXdpObjects or ebpf.CollectionSpec.LoadAndAssign.
type exampleXdpMaps struct {
}

func (m *exampleXdpMaps) Close() error {
	return _ExampleXdpClose()
}

// exampleXdpPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to loadExampleXdpObjects or ebpf.CollectionSpec.LoadAndAssign.
type exampleXdpPrograms struct {
	XdpPass *ebpf.Program `ebpf:"xdp_pass"`
}

func (p *exampleXdpPrograms) Close() error {
	return _ExampleXdpClose(
		p.XdpPass,
	)
}

func _ExampleXdpClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//go:embed examplexdp_bpfel_x86.o
var _ExampleXdpBytes []byte
